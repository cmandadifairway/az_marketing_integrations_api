 jobs:
  - deployment: ${{Parameters.job_name}}
    pool:
      vmImage: ubuntu-latest
    variables:
      - group: ${{Parameters.group}}
    environment: ${{Parameters.env}}
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: none
            - script: |
                ip=$(curl -s http://ipinfo.io/json | jq '.ip')
                echo "##vso[task.setvariable variable=ip]$ip"
              displayName: "Get Azure Build Agent IP Address"
            - task: DownloadBuildArtifacts@0
              inputs:
                downloadType: 'single'
                artifactName: 'tf'
                downloadPath: '$(System.ArtifactsDirectory)'
            - task: qetza.replacetokens.replacetokens-task.replacetokens@3
              displayName: "Replace tokens in terraform"
              inputs:
                rootDirectory: '$(System.ArtifactsDirectory)/tf'
                targetFiles: |
                  **/*.tfvars
                  **/*.tf
                  **/*.yaml
                escapeType: none
                tokenPrefix: "__"
                tokenSuffix: "__"
            - task: TerraformInstaller@0
              inputs:
                terraformVersion: ${{Parameters.tfversion}}
            - script: |
                terraform init -backend-config="storage_account_name=$(AZDO--BACKEND--STORAGEACCT)" -backend-config="access_key=$(AZDO--BACKEND--ACCESSKEY)"
                terraform workspace select ${{Parameters.env}} || terraform workspace new ${{Parameters.env}}
                terraform init -backend-config="storage_account_name=$(AZDO--BACKEND--STORAGEACCT)" -backend-config="access_key=$(AZDO--BACKEND--ACCESSKEY)"
                terraform plan -var client_secret="$(AZDO--SUB--CS)"
                terraform apply -var client_secret="$(AZDO--SUB--CS)" -auto-approve
              workingDirectory: '$(System.ArtifactsDirectory)/tf'
              displayName: "Terraform Init & Apply"
            - task: raul-arrieta.terraform-outputs.terraform-outputs.terraform-outputs@0
              displayName: "Terraform Outputs"
              inputs:
                workingDirectory: '$(System.ArtifactsDirectory)/tf'
                variablePrefix: "op_"
            - task: DownloadBuildArtifacts@0
              inputs:
                downloadType: 'single'
                artifactName: '${{Parameters.servicename}}'
                targetPath: '$(System.ArtifactsDirectory)'
            - task: AzureFunctionApp@1
              displayName: "Azure Function App Deploy: ${{Parameters.servicename}}"
              inputs:
                azureSubscription: "${{Parameters.svc_conn}}"
                appType: functionApp
                appName: "$(OP_FUNCAPP_NAME)"
                #Uncomment the next lines to deploy to a deployment slot
                #deployToSlotOrASE: true
                #slotName: '<Slot name>'
                #resourceGroupName: '$(OP_FUNCAPPRG_NAME)'
                package: "$(System.ArtifactsDirectory)/**/*.zip"
